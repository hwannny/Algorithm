<문제>
문제 설명
배열 arr가 주어집니다. 배열 arr의 각 원소는 숫자 0부터 9까지로 이루어져 있습니다. 
이때, 배열 arr에서 연속적으로 나타나는 숫자는 하나만 남기고 전부 제거하려고 합니다. 
단, 제거된 후 남은 수들을 반환할 때는 배열 arr의 원소들의 순서를 유지해야 합니다. 

예를 들면,
arr = [1, 1, 3, 3, 0, 1, 1] 이면 [1, 3, 0, 1] 을 return 합니다.
arr = [4, 4, 4, 3, 3] 이면 [4, 3] 을 return 합니다.
배열 arr에서 연속적으로 나타나는 숫자는 제거하고 남은 수들을 return 하는 solution 함수를 완성해 주세요.

<제한사항>
배열 arr의 크기 : 1,000,000 이하의 자연수
배열 arr의 원소의 크기 : 0보다 크거나 같고 9보다 작거나 같은 정수

<입출력 예>
arr	                  answer
[1,1,3,3,0,1,1]	      [1,3,0,1]
[4,4,4,3,3]	          [4,3]


출처: https://programmers.co.kr/learn/courses/30/lessons/12906


<의사코드>
input: vector<int> arr
output: vector<int> answeer
values: temp: 연속 중복 확인을 위한 임시변수

1. temp = answer.add(arr.firstValue)
2. for i: 2 ~ arr.size(), i++
    if arr[i] != temp
         answer.add(arr[i])
	     temp = arr[i]
3. return answer


<C++코드>
#include <vector>
#include <iostream>

using namespace std;

vector<int> solution(vector<int> arr)
{
	vector<int> answer;
	int temp;

	answer.push_back(arr[0]);
	temp = answer[0];
  
	for (unsigned i = 1; i < arr.size(); i++) {
		 if (arr[i] != temp) {
			 answer.push_back(arr[i]);
			 temp = arr[i];
		 }
	 }	
	return answer;
}

<노트>
벡터의 길이 만큼 동작하는 O(n)의 성능을 가지고 있다
입력받은 벡터의 첫 값을 바로 추가해주고, temp에 임시저장해준다
i는 두번째값부터 시작되고, 해당하는 arr[i] 값이 임시저장값과 같지 않으면
새로운 숫자가 캐치된 것이므로, 결과벡터에 추가해주고 임시변수를 바꿔준다
