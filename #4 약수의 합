<문제>
정수 n을 입력받아 n의 약수를 모두 더한 값을 리턴하는 함수, solution을 완성해주세요.

<제한조건>
n은 0 이상 3000이하인 정수입니다..

<입출력 예>
n	return
12	28
5	6

출처: https://programmers.co.kr/learn/courses/30/lessons/12928


<의사코드>
input: int n
output: int answer

1. for i: 1 ~ sqrt(n), i++
    if n%i == 0:
        answer +=i
        answer += n/i
2. if sqrt(i)==n: answer += i;
3. return answer

<C++코드>
#include <string>
#include <vector>

using namespace std;

int solution(int n) {
  int answer = 0, i;
  
	for (i = 1; i * i < n; i++) {
		if (n % i == 0) {
			answer += i;
			answer += n / i;
		}
	}
	if (i * i == n) answer += i;
	return answer;
}


<노트>
일반적으로 for i를 1부터 입력받은 n까지 돌리는 O(n)의 경우를 생각해볼수있다.
다만, 약수의 최소공배수는 다른 약수끼리의 곱으로 나타나지는 특성을 이용해서
i를 n이나 n/2까지가 아닌 sqrt(n)까지만 돌리고 동시에 다른 약수도 같이 더해주는 방식을 택하면
성능이 향상된다.

ex) 12는 
1  x 12  = 12
2  x  6  = 12
3  x  4  = 12
---------------- 기준 sqrt(n)
4  x  3  = 12
6  x  2  = 12
12 x  1  = 12

로 표시 가능한데,  1,12는 동시에 구한 약수로 취급 가능하다. ( 12는 12/1로 구할수 있다 )
마찬가지로 2,6도 동시에 구한 약수로 취급 가능하다. ( 6은 12/2로 구할수 있다 )
