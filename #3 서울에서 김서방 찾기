<문제>
String형 배열 seoul의 element중 Kim의 위치 x를 찾아, 김서방은 x에 있다는 String을 반환하는 함수,
solution을 완성하세요. seoul에 Kim은 오직 한 번만 나타나며 잘못된 값이 입력되는 경우는 없습니다.

<제한사항>
seoul은 길이 1 이상, 1000 이하인 배열입니다.
seoul의 원소는 길이 1 이상, 20 이하인 문자열입니다.
Kim은 반드시 seoul 안에 포함되어 있습니다.

<입출력 예>
seoul	return
[Jane, Kim]	김서방은 1에 있다

<출처>
https://programmers.co.kr/learn/courses/30/lessons/12919

<의사코드>
input: vector<string> seoul
output: string answer

1. for i: 1 ~ seoul.size() ,i++
    if seoul[i].compare("Kim") answer = "김서방은 "+ to_string(index) + "에 있다"
2. return answer

<C++ 코드>
#include <string>
#include <vector>

using namespace std;

string solution(vector<string> seoul) {
    string answer = "";

	for (int i = 0; i < seoul.size(); i++) {
		if (!seoul[i].compare("Kim")) return answer += "김서방은 "+ to_string(i) + "에 있다";
	}
    return answer;
}

<노트>
입력값에 Kim이 단 하나 존재하므로, 쉽게 find를 통해 찾아서 해당 index를 리턴받아서 출력할수 있다.
여기서 find 기법으로는 find 함수를 사용해서 직접 그 index를 받는 방법이 있고 
두번째로는 for i문을 돌려서 i에 해당하는 벡터값을 compare 해서 값이 같을때 i값을 받는 방법이 있다.
성능은 프로그래머스 예제로 돌려본결과 시간,메모리 둘다 비슷하다.

단, 내가 작성한 코드는 for i문을 사용하였지만
단순히 찾는 목적이라면 미리 잘 만들어진 find 함수를 사용하는게 바람직해 보인다.
